# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\24532\Desktop\GUI\base.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5 import QtCore, QtGui, QtWidgets
from CompilerUI.complier_MainRun import compiler_MainRun  # 导入子界面

class Ui_base(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(700, 800)
        Form.setStyleSheet("background-color: #f5f5f5;")  # 设置背景色为浅灰色
        Form.setMinimumSize(QtCore.QSize(700, 800))
        Form.setMaximumSize(QtCore.QSize(700, 800))
        
        # 主界面的 widget 设置
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setGeometry(QtCore.QRect(50, 20, 600, 700))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.widget.setFont(font)
        self.widget.setObjectName("widget")
        
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        
        # RadioButton 设置
        self.radioButton = QtWidgets.QRadioButton(self.widget)
        self.radioButton.setText("编译器部分测试")
        self.radioButton.setStyleSheet("color: #555555;")
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.radioButton.setFont(font)
        self.verticalLayout.addWidget(self.radioButton)
        
        # 按钮设置
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setText("进行测试")
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet(
            """
            QPushButton {
                background-color: #4CAF50;
                color: white;
                border-radius: 8px;
                padding: 10px 20px;
            }
            QPushButton:hover {
                background-color: #45a049;
            }
            """
        )
        self.pushButton.clicked.connect(self.open_subwidget)  # 绑定按钮点击事件
        self.verticalLayout.addWidget(self.pushButton)

    def open_subwidget(self):
        # 检查 RadioButton 是否被选中
        if self.radioButton.isChecked():
            self.subWindow = compiler_MainRun()  # 创建子界面实例
            self.subWindow.show()  # 显示子界面
        else:
            QtWidgets.QMessageBox.warning(None, "警告", "请先选择选项!")

